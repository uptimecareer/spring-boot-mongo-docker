node{
  stage('checkout'){
    git changelog: false, credentialsId: 'github_cred', poll: false, url: 'https://github.com/uptimecareer/spring-boot-mongo-docker.git'  
  }
  stage('build artifact'){
      def mavenHome = tool name: "maven-3.9.9", type: "maven"
      sh "${mavenHome}/bin/mvn clean package"
  }
  stage('Create Image'){
      sh "docker build -t uptimecareer/spring-boot-mongo:latest ."
  }
  stage('Docker Login and Push Image'){
      withCredentials([string(credentialsId: 'docker_hub_pwd', variable: 'docker_hub_pwd')]) {
      sh "docker login -u uptimecareer -p ${docker_hub_pwd}" 
    }
      sh "docker push uptimecareer/spring-boot-mongo:latest"
   }
 stage('Remove Local Image'){
      sh "docker rmi -f uptimecareer/spring-boot-mongo:latest"
  } 
  stage('Deploy Image to Swarm Cluster'){
    sshagent(['swarm_manager_cred']) {
      sh 'scp -o StrictHostKeyChecking=no docker-composeswarm.yml ec2-user@18.220.20.80:'
      sh 'ssh -o StrictHostKeyChecking=no ec2-user@18.220.20.80 docker stack deploy --prune --compose-file docker-composeswarm.yml springboot'
}  
      
  }
}
